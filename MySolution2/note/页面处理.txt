页面处理
	八、自动回送(回传)
		· 使用ASP.NET事件处理机制不可能处理所有的客户端操作，因为用户的操作是在客户端中进行，而响应代码
		是在服务器端进行。
		· 自动会送机制可以是一些需要及时响应用户操作的控件的得到扩展，让服务器端能够立即响应用户的操作
		· Web控件的AutoPostBack属性设为true即可开启此控件的自动会送功能
		· 调用页面中自动生成的__doPostBack()方法进行页面回送

	九、客户端和服务端脚本的执行顺序
		Web窗体处理阶段：
			1.浏览器提出请求
			2.页面框架初始化(服务器端PageLoad代码)
			3.用户代码初始化
			4.验证
			5.事件处理
			6.浏览器接收回应

	十、Page类的属性：
		Page类的其他属性：
			· Application	应用程序状态管理
			· Session		会话状态管理
			· Server		服务器辅助类
			· Response		HTTP响应处理类
			· Request		HTTP请求处理类
			· Cache		应用程序缓存处理类
		1.isPostBack
		2.Request属性：
			返回一个HttpRequest类型的对象，表示请求期间的数据。
			常用属性：
				Form：获得以POST方式请求的数据
				QueryString：获得以GET方式请求的数据
		3.Response属性：
			返回一个HttpResponse对象，表示服务器发回给客户端的响应对象，封装了响应期间的数据。
			常用方法：
				Write()：服务端项客户端的HTTP输出流中输出内容。
				End()：停止该页的执行
				Redirect()：页面的重定向
		4.Server属性：
			· System.Web.HttpServerUtility类的实例
			返回一个HttpServerUtility类型对象，表示当前页面的服务器对象
			常用方法：
				HtmlEncode()：Html标签的编码
				HtmlDecode()：Html标签的解码
				UrlEncode()：url地址栏的编码
				UrlDecode()：url地址栏的解码
				MapPath()：将虚拟路径转化成实际可用的物理路径
				Transfer()：在服务器端实现页面跳转，停止当前页的执行
				Execute()：在服务端实现页面的跳转，保存当前页的执行
		5.Server.Transfer()、Server.Execute()、Response.Redirect()的区别：
			Response.Redirect()：在客户端跳转，地址栏不变化
			Server.Transfer()、Server.Execute()：在服务端跳转，地址栏不变化
			Server.Transfer()：停止当前页的执行；而Server.Execute()保留对当前页的执行
		
