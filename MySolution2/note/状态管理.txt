一、状态管理的必要
	浏览器向服务器请求某个页面，服务器处理完返回该页对象，之后在服务器端会清除该页面对象的数据，如果用户
需要保存页面中的数据，就需要进行状态管理。

二、状态管理分类
	1.视图状态管理
		· 视图状态是在单个页面(在单个页面的多次回传请求过程)中保存信息的第一选择
		· 通过对ViewState属性对视图状态进行访问(在基类Control中定义的属性)
				和ASP.NEY大多数的状态管理方法类似，视图状态依赖于字典集合
				保存数据：ViewState["key"]=value;
				读取数据：object obj = ViewState["key"];
		· 视图状态中的内容在服务端会被序列化后保存到一个隐藏域中，作为页面中的一个控件跟随页面回发到
		客户端浏览器
			<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="bq1cpNuZ1DtY1OeVKq0NCoGrj8S
			udpjufKrOI61dW4UIB1uGyIhY+L8z1YKD7spugw6RXJ7mv+k7iEsPoF/1lICgm2vN0y4FgYwX5rFti58=">

			注：C#不要求任何特殊语法即可将对象转换为它的任何基类型，因为向基类型的转换被认为是一种安全的隐式
		转换。然而，将对象转换为它的某个派生类型时，C#要求开发人员只能进行显式转换，因为这种转换可能在运行时
		失败。可以理解为：父类强制转换成子类,子类隐式转换成父类。

		视图状态工作原理：
			· 视图状态在服务器端处理时是一个字典集合
			· 当页面处理完毕后，视图状态中所有的信息会进行序列化操作，形成Base64编码的单个字符串保存在
			页面中id为__VIEWSTATE的隐藏域控件中。
			· 当用户操作导致页面回传时此隐藏域中的信息会随着表单一起回发到服务器端，系统会将其内容还原
			为保存前的信息。
		保存位置：客户端的隐藏域控件
		保存数据的类型：object类型
		注意：
			1.如果通过视图状态保存的数据是对象类型，要将对象标记为可序列化Serializable
			2.通过视图状态保存大量数据时，会占用大量带宽，影响下载速度

	2.应用程序状态管理
		· 应用程序状态管理：
			Web应用程序在运行过程中需要对整个应用程序级别的信息进行保存读取的操作
		· 作用：
			在web应用程序运行期间保存数据的方式
		· 应用程序状态管理的几种操作方式：
			· 使用Application对象进行信息处理
			· 使用Global类的静态属性进行信息处理
			· 使用应用程序级缓存进行信息处理

		1.Application对象使用
			· Applicaition属性是Page类中定义的属性，System.Web.HttpApplicationState类型的实例，这种类
			型的对象主要用来进行全局信息保存。
			· 在页面中可通过以下方式进行访问：
				this.Applicaiton["访问关键字"] = value;
				value为object数据类型，即可以保存任意信息且无需序列化
			· Applicaiton对象中的信息需要先声明再提取，并且在提取时需要进行类型转换
			· 修改Application中信息时需要进行加锁和解锁操作：
				this.Applicaiton.Lock();
				this.Applicaiton.UnLock();
			· 数据保存声明周期
				保存位置：在服务器的内存中
				数据写入 --> 应用程序关闭(或手动移除)
				移除操作：this.Application.Remove("key");
			· 数据使用范围
				任意用户任意页面写入后，任意用户及页面都可以读取(跨用户、跨页面)
			· 类型转换
				写入进行装箱
				读取需要拆箱
			· 使用场合(应用程序级信息的保存)
				聊天室中的在线用户列表
				网站中在线人员总数
				系统公告等

		2.特点：
			1.跨用户：任意用户写入的数据，其他的任意用户都能读取到
			2.跨页面：在任意一个页面写入的数据，其他的任意页面都能读取到

		Global.asax文件的作用：
			· 在应用程序中可创建一个Global.aspx文件
			· 此文件应该存放于应用程序根目录下
			· 此文件中包含一个名为Global的类
			· 其作用为编写应用陈旭级别的事件响应方法
			· 演示在Web项目中创建Global.asax文件

	使用Global.asax文件
		· 在其他事件响应方法中添加代码

	静态属性的特点：
		· 使用static关键字为类声明静态属性
		· 静态属性的特点：
			一旦声明，常驻内存
			任何用户任何页面都可以随时提取或修改其保存的值
		· Web应用程序中最适合使用静态属性的类
			Global.asax文件中的Global类
			进行静态属性的声明

3.会话级状态管理
	· Web应用程序除了需要保存整个应用程序级别的信息以外，还需要保存特定用户的信息，并且此信息为保密信息
以外，还需要保存特定用户的信息，并且此信息为保密信息，即不可被其他用户读取到。比如用户的密码、角色信息、
权限信息、私密信息等。
	· ASP.NET应用程序中有两种方式保存用户的个人信息
		使用Session对象进行会话信息保存
		使用Cookie对象进行个人信息保存

	作用：保存特定用户的特有信息，比如用户权限、密码、个性化设置等
		方式1：使用Session对象(会话状态)
			· Session属性是Page类中的属性，System.Web.SessionState.HttpSessionState类型的实例，这种类型
			的对象是用来保存特定用户的信息
			· 在页面中通过以下方法访问会话：
				this.Session["key"] = value;
				object value = this.Session["key"];
			· ASP.NET应用程序为每一个用户的会话在服务器端使用独立的内存进行保存
			· 注意：在使用会话时需要考虑服务器内存的消耗，尽可能减少使用会话保存信息的操作

			保存位置：为每一个Session在服务端单独开辟内存，保存它的数据。

			
	
